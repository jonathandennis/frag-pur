{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathandennis/frag-pur/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../Header/Header';\nimport NavBar from '../NavBar/NavBar';\nimport About from '../About/About';\nimport StoneFilter from '../StoneFilter/StoneFilter';\nimport Contact from '../Contact/Contact';\n/* import stoneService from '../../services/stones' */\n\nimport axios from 'axios';\nimport './App.css';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nconst App = () => {\n  _s();\n\n  const [stones, setStones] = useState([]);\n  const {\n    pathname,\n    hash\n  } = useLocation();\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/stones').then(response => {\n      console.log('promise fulfilled');\n      setStones(response.data);\n    });\n  }, []);\n  console.log('render', stones.length, 'stones');\n  useEffect(() => {\n    // if not a hash link scroll to top\n    if (hash === '') {\n      window.scrollTo(0, 0);\n    } // else scroll to id\n    else {\n        setTimeout(() => {\n          const id = hash.replace('#', '');\n          const element = document.getElementById(id);\n\n          if (element) {\n            element.scrollIntoView();\n          }\n        }, 0);\n      }\n  }, [hash, pathname]); // do this on route change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/stones\",\n      children: /*#__PURE__*/_jsxDEV(StoneFilter, {\n        stones: stones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/contact\",\n      component: Contact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/5D/n7M+8OuEpxw6fJQaouetQhY=\", false, function () {\n  return [useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jonathandennis/frag-pur/src/components/App/App.js"],"names":["React","useState","useEffect","Header","NavBar","About","StoneFilter","Contact","axios","Route","Switch","useLocation","App","stones","setStones","pathname","hash","console","log","get","then","response","data","length","window","scrollTo","setTimeout","id","replace","element","document","getElementById","scrollIntoView"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,QAA2C,kBAA3C;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBL,WAAW,EAAtC;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAV,IAAAA,KAAK,CACJW,GADD,CACK,8BADL,EAECC,IAFD,CAEMC,QAAQ,IAAI;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAJ,MAAAA,SAAS,CAACO,QAAQ,CAACC,IAAV,CAAT;AACC,KALH;AAMD,GARQ,EAQN,EARM,CAAT;AASAL,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,MAAM,CAACU,MAA7B,EAAqC,QAArC;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAGc,IAAI,KAAG,EAAV,EAAa;AACTQ,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,KAFD,CAGA;AAHA,SAII;AACAC,QAAAA,UAAU,CACN,MAAM;AACF,gBAAMC,EAAE,GAAGX,IAAI,CAACY,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAX;AACA,gBAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,EAAxB,CAAhB;;AACA,cAAIE,OAAJ,EAAa;AACTA,YAAAA,OAAO,CAACG,cAAR;AACH;AACJ,SAPK,EAQN,CARM,CAAV;AAUH;AACJ,GAlBU,EAkBR,CAAChB,IAAD,EAAOD,QAAP,CAlBQ,CAAT,CAhBgB,CAkCG;;AAEnB,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEV;AAAtC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEQ;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,SAAS,EAAEN;AAAxC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjDD;;GAAMK,G;UAEuBD,W;;;KAFvBC,G;AAmDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Header from '../Header/Header'\nimport NavBar from '../NavBar/NavBar'\nimport About from '../About/About'\nimport StoneFilter from '../StoneFilter/StoneFilter'\nimport Contact from '../Contact/Contact'\n/* import stoneService from '../../services/stones' */\nimport axios from 'axios'\n\nimport './App.css'\n\nimport { Route, Switch, useLocation } from 'react-router-dom'\n\nconst App = () => {\n  const [stones, setStones] = useState([])\n  const { pathname, hash } = useLocation()\n\n\n  useEffect(() => {\n    console.log('effect');\n    axios\n    .get('http://localhost:3001/stones')\n    .then(response => {\n      console.log('promise fulfilled')\n      setStones(response.data)\n      })\n  }, [])\n  console.log('render', stones.length, 'stones')\n\n  useEffect(() => {\n    // if not a hash link scroll to top\n    if(hash===''){\n        window.scrollTo(0, 0)\n    }\n    // else scroll to id\n    else{\n        setTimeout(\n            () => {\n                const id = hash.replace('#', '');\n                const element = document.getElementById(id);\n                if (element) {\n                    element.scrollIntoView();\n                }\n            },\n            0\n        );\n    }\n}, [hash, pathname]) // do this on route change\n\n  return (\n    <div className=\"appContainer\">\n      <Header />\n      <NavBar />\n        <Route exact path=\"/about\" component={About} />\n          {/* <About /> */}\n        <Route exact path=\"/stones\">\n          <StoneFilter stones={stones} />\n        </Route>\n        <Route exact path=\"/contact\" component={Contact} />\n        {/* <Contact /> */}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}