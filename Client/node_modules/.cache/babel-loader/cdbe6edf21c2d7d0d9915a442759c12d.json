{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathandennis/frag-pur/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../Header/Header';\nimport NavBar from '../NavBar/NavBar';\nimport About from '../About/About';\nimport StoneFilter from '../StoneFilter/StoneFilter'; //import StoneFilterListItem from '../StoneFilterListItem/StoneFilterListItem'\n//import Stone from '../Stone/Stone'\n\nimport Contact from '../Contact/Contact';\n/* import stoneService from '../../services/stones' */\n\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  _s();\n\n  const [stones, setStones] = useState([]); //const [ filtersType, setFiltersType ] = useState([])\n\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/stones').then(response => {\n      console.log('promise fulfilled');\n      setStones(response.data);\n    });\n  }, []);\n  console.log('render', stones.length, 'stones'); ////////// Filter logic //////////\n  // useEffect(() => {\n  //   const filterValues = [...new Set([ 'all', ...stones.map(stone => stone.type) ])]\n  //   setFiltersType(filterValues.map((stone, i) => ({ active: false, value: stone, id: i + 1 })))\n  // }, [ stones ])\n  // const onFilterTypeChange = ({ target: { checked: active, dataset: { value } } }) => {\n  //   const\n  //     newFilters = filtersType.map(stone => [ stone.value, 'all' ].includes(value) ? { ...stone, active } : stone),\n  //     isAll = newFilters.filter(stone => stone.value !== 'all').every(stone => stone.active)\n  //   newFilters.find(stone => stone.value === 'all').active = isAll\n  //   setFiltersType(newFilters)\n  // };\n  // const\n  //   filteredTypes = filtersType.filter(stone => stone.active).map(stone => stone.value),\n  //   filteredStones = stones.filter(stone => filteredTypes.includes(stone.type));\n  ////////// END Filter logic //////////\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StoneFilter, {\n      stones: stones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"QmOA7bidxhQYV8sx+IHLIaPBOZk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jonathandennis/frag-pur/src/components/App/App.js"],"names":["React","useState","useEffect","Header","NavBar","About","StoneFilter","Contact","axios","App","stones","setStones","console","log","get","then","response","data","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC,CADgB,CAEjB;;AAECC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAL,IAAAA,KAAK,CACJM,GADD,CACK,8BADL,EAECC,IAFD,CAEMC,QAAQ,IAAI;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAF,MAAAA,SAAS,CAACK,QAAQ,CAACC,IAAV,CAAT;AACC,KALH;AAMD,GARQ,EAQN,EARM,CAAT;AASAL,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAM,CAACQ,MAA7B,EAAqC,QAArC,EAbgB,CAehB;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAER;AAArB;AAAA;AAAA;AAAA;AAAA,YAJF,eAuBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAjED;;GAAMD,G;;KAAAA,G;AAmEN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Header from '../Header/Header'\nimport NavBar from '../NavBar/NavBar'\nimport About from '../About/About'\nimport StoneFilter from '../StoneFilter/StoneFilter'\n//import StoneFilterListItem from '../StoneFilterListItem/StoneFilterListItem'\n//import Stone from '../Stone/Stone'\nimport Contact from '../Contact/Contact'\n/* import stoneService from '../../services/stones' */\nimport axios from 'axios'\n\nimport './App.css'\n\nconst App = () => {\n  const [stones, setStones] = useState([])\n //const [ filtersType, setFiltersType ] = useState([])\n\n  useEffect(() => {\n    console.log('effect');\n    axios\n    .get('http://localhost:3001/stones')\n    .then(response => {\n      console.log('promise fulfilled')\n      setStones(response.data)\n      })\n  }, [])\n  console.log('render', stones.length, 'stones')\n\n  ////////// Filter logic //////////\n\n  // useEffect(() => {\n  //   const filterValues = [...new Set([ 'all', ...stones.map(stone => stone.type) ])]\n  //   setFiltersType(filterValues.map((stone, i) => ({ active: false, value: stone, id: i + 1 })))\n  // }, [ stones ])\n\n  // const onFilterTypeChange = ({ target: { checked: active, dataset: { value } } }) => {\n  //   const\n  //     newFilters = filtersType.map(stone => [ stone.value, 'all' ].includes(value) ? { ...stone, active } : stone),\n  //     isAll = newFilters.filter(stone => stone.value !== 'all').every(stone => stone.active)\n\n  //   newFilters.find(stone => stone.value === 'all').active = isAll\n\n  //   setFiltersType(newFilters)\n  // };\n\n  // const\n  //   filteredTypes = filtersType.filter(stone => stone.active).map(stone => stone.value),\n  //   filteredStones = stones.filter(stone => filteredTypes.includes(stone.type));\n\n  ////////// END Filter logic //////////\n\n  return (\n    <div className=\"appContainer\">\n      <Header />\n      <NavBar />\n      <About />\n      <StoneFilter stones={stones} />\n      {/* <div>\n      <h2 className=\"stone__nav-head\">Type</h2>\n            <div className=\"stone__nav-list\">\n              {filtersType.map(n =>\n              <StoneFilterListItem\n                key={n.id}\n                {...n}\n                onChange={onFilterTypeChange}\n              />)}\n                  <span className=\"checkmark\"></span>\n              {filteredStones.map(n => \n              <Stone\n                stone={n}\n                key={n.id}\n                {...n}\n              />)}\n            </div>\n      </div> */}\n      <Contact />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}