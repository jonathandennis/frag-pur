{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathandennis/frag-pur/Client/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../Header/Header';\nimport NavBar from '../NavBar/NavBar';\nimport About from '../About/About';\nimport StoneFilter from '../StoneFilter/StoneFilter';\nimport Contact from '../Contact/Contact';\nimport stoneService from '../../services/stones'; //import axios from 'axios'\n\nimport './App.css';\nimport { useLocation } from 'react-router-dom';\n\nconst App = () => {\n  _s();\n\n  const [stones, setStones] = useState([]);\n  const {\n    pathname,\n    hash\n  } = useLocation();\n  useEffect(() => {\n    stoneService.getAll().then(response => {\n      setStones(response.data);\n    });\n  }, []); //console.log('render', stones.length, 'stones')\n\n  useEffect(() => {\n    // if not a hash link scroll to top\n    if (hash === '') {\n      window.scrollTo(0, 0);\n    } // else scroll to id\n    else {\n        setTimeout(() => {\n          const id = hash.replace('#', '');\n          const element = document.getElementById(id);\n\n          if (element) {\n            element.scrollIntoView();\n          }\n        }, 0);\n      }\n  }, [hash, pathname]); // do this on route change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StoneFilter, {\n      stones: stones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/5D/n7M+8OuEpxw6fJQaouetQhY=\", false, function () {\n  return [useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jonathandennis/frag-pur/Client/src/components/App/App.js"],"names":["React","useState","useEffect","Header","NavBar","About","StoneFilter","Contact","stoneService","useLocation","App","stones","setStones","pathname","hash","getAll","then","response","data","window","scrollTo","setTimeout","id","replace","element","document","getElementById","scrollIntoView"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CACA;;AAEA,OAAO,WAAP;AAEA,SAASC,WAAT,QAA4B,kBAA5B;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBL,WAAW,EAAtC;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CACXO,MADD,GAECC,IAFD,CAEMC,QAAQ,IAAI;AAChBL,MAAAA,SAAS,CAACK,QAAQ,CAACC,IAAV,CAAT;AACC,KAJH;AAKD,GANQ,EAMN,EANM,CAAT,CALgB,CAYhB;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAGY,IAAI,KAAG,EAAV,EAAa;AACTK,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,KAFD,CAGA;AAHA,SAII;AACAC,QAAAA,UAAU,CACN,MAAM;AACF,gBAAMC,EAAE,GAAGR,IAAI,CAACS,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAX;AACA,gBAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,EAAxB,CAAhB;;AACA,cAAIE,OAAJ,EAAa;AACTA,YAAAA,OAAO,CAACG,cAAR;AACH;AACJ,SAPK,EAQN,CARM,CAAV;AAUH;AACJ,GAlBU,EAkBR,CAACb,IAAD,EAAOD,QAAP,CAlBQ,CAAT,CAdgB,CAgCG;;AAEnB,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YATF,eAWE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjDD;;GAAMD,G;UAEuBD,W;;;KAFvBC,G;AAmDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Header from '../Header/Header'\nimport NavBar from '../NavBar/NavBar'\nimport About from '../About/About'\nimport StoneFilter from '../StoneFilter/StoneFilter'\nimport Contact from '../Contact/Contact'\nimport stoneService from '../../services/stones'\n//import axios from 'axios'\n\nimport './App.css'\n\nimport { useLocation } from 'react-router-dom'\n\n\nconst App = () => {\n  const [stones, setStones] = useState([])\n  const { pathname, hash } = useLocation()\n\n\n  useEffect(() => {\n    stoneService\n    .getAll()\n    .then(response => {\n      setStones(response.data)\n      })\n  }, [])\n  //console.log('render', stones.length, 'stones')\n\n  useEffect(() => {\n    // if not a hash link scroll to top\n    if(hash===''){\n        window.scrollTo(0, 0)\n    }\n    // else scroll to id\n    else{\n        setTimeout(\n            () => {\n                const id = hash.replace('#', '');\n                const element = document.getElementById(id);\n                if (element) {\n                    element.scrollIntoView();\n                }\n            },\n            0\n        );\n    }\n}, [hash, pathname]) // do this on route change\n\n  return (\n    <div className=\"appContainer\">\n      <Header />\n      {/* <Route exact path=\"/\" component={Header} /> */}\n      <NavBar />\n      {/* <Route exact path=\"/\" component={About} /> */}\n      <About />\n      {/* <Route exact path=\"/\">\n        <StoneFilter stones={stones} />\n      </Route> */}\n      <StoneFilter stones={stones} />\n      {/* <Route exact path=\"/\" component={Contact} /> */}\n      <Contact />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}