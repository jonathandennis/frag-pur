{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonathandennis/frag-pur/src/components/StoneFilter/StoneFilter.js\";\nimport React from 'react';\nimport StoneFilterListItem from '../StoneFilterListItem/StoneFilterListItem';\nimport checkboxesType from './checkboxesType';\nimport checkboxesColor from './checkboxesColor';\nimport './StoneFilter.css';\n\nconst StoneFilter = () => {\n  /* const [stoneType, setStoneType] = useState({})\n  const [stoneColor, setStoneColor] = useState({}) */\n  const handleTypeChange = event => {\n    setStoneType({ ...stoneType,\n      [event.target.id]: event.target.checked\n    });\n    console.log('checked types: ', stoneType);\n  };\n\n  const handleColorChange = event => {\n    setStoneColor({ ...stoneColor,\n      [event.target.id]: event.target.checked\n    });\n    console.log('checked colors: ', stoneColor);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stone__nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"stone__nav-head\",\n      children: \"Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stone__nav-list\",\n      children: checkboxesType.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"stone__nav-var\",\n        children: [item.id, /*#__PURE__*/_jsxDEV(StoneFilterListItem, {\n          id: item.id,\n          name: item.name,\n          value: item.value,\n          checked: stoneType[item.id],\n          onChange: handleTypeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this)]\n      }, item.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"stone__nav-head\",\n      children: \"Couleur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stone__nav-list\",\n      children: checkboxesColor.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"stone__nav-var\",\n        children: [item.id, /*#__PURE__*/_jsxDEV(StoneFilterListItem, {\n          id: item.id,\n          name: item.name,\n          value: item.value,\n          checked: stoneColor[item.id],\n          onChange: handleColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, this)]\n      }, item.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c = StoneFilter;\nexport default StoneFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoneFilter\");","map":{"version":3,"sources":["/Users/jonathandennis/frag-pur/src/components/StoneFilter/StoneFilter.js"],"names":["React","StoneFilterListItem","checkboxesType","checkboxesColor","StoneFilter","handleTypeChange","event","setStoneType","stoneType","target","id","checked","console","log","handleColorChange","setStoneColor","stoneColor","map","item","name","value","key"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAExB;AACF;AAEE,QAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChCC,IAAAA,YAAY,CAAC,EACX,GAAGC,SADQ;AAEX,OAACF,KAAK,CAACG,MAAN,CAAaC,EAAd,GAAmBJ,KAAK,CAACG,MAAN,CAAaE;AAFrB,KAAD,CAAZ;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,SAA/B;AACD,GAND;;AAQA,QAAMM,iBAAiB,GAAGR,KAAK,IAAI;AACjCS,IAAAA,aAAa,CAAC,EACZ,GAAGC,UADS;AAEZ,OAACV,KAAK,CAACG,MAAN,CAAaC,EAAd,GAAmBJ,KAAK,CAACG,MAAN,CAAaE;AAFpB,KAAD,CAAb;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCG,UAAhC;AACD,GAND;;AASE,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGd,cAAc,CAACe,GAAf,CAAmBC,IAAI,iBACtB;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAA,mBACGA,IAAI,CAACR,EADR,eAEE,QAAC,mBAAD;AACE,UAAA,EAAE,EAAEQ,IAAI,CAACR,EADX;AAEE,UAAA,IAAI,EAAEQ,IAAI,CAACC,IAFb;AAGE,UAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,UAAA,OAAO,EAAEZ,SAAS,CAACU,IAAI,CAACR,EAAN,CAJpB;AAKE,UAAA,QAAQ,EAAEL;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAAuCa,IAAI,CAACG,GAA5C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFJ,eAiBI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAkBI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGlB,eAAe,CAACc,GAAhB,CAAoBC,IAAI,iBACvB;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAA,mBACGA,IAAI,CAACR,EADR,eAEE,QAAC,mBAAD;AACE,UAAA,EAAE,EAAEQ,IAAI,CAACR,EADX;AAEE,UAAA,IAAI,EAAEQ,IAAI,CAACC,IAFb;AAGE,UAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,UAAA,OAAO,EAAEJ,UAAU,CAACE,IAAI,CAACR,EAAN,CAJrB;AAKE,UAAA,QAAQ,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAAuCI,IAAI,CAACG,GAA5C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CA1DD;;KAAMjB,W;AA4DN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport StoneFilterListItem from '../StoneFilterListItem/StoneFilterListItem'\nimport checkboxesType from './checkboxesType'\nimport checkboxesColor from './checkboxesColor'\n\nimport './StoneFilter.css'\n\nconst StoneFilter = () => {\n\n  /* const [stoneType, setStoneType] = useState({})\n  const [stoneColor, setStoneColor] = useState({}) */\n\n  const handleTypeChange = event => {\n    setStoneType({\n      ...stoneType,\n      [event.target.id]: event.target.checked\n    })\n    console.log('checked types: ', stoneType)\n  }\n\n  const handleColorChange = event => {\n    setStoneColor({\n      ...stoneColor,\n      [event.target.id]: event.target.checked\n    })\n    console.log('checked colors: ', stoneColor)\n  }\n\n\n    return (\n        <div className=\"stone__nav\">\n            <h2 className=\"stone__nav-head\">Type</h2>\n            <div className=\"stone__nav-list\">\n              {checkboxesType.map(item => (\n                <label className=\"stone__nav-var\" key={item.key}>\n                  {item.id}\n                  <StoneFilterListItem\n                    id={item.id}\n                    name={item.name}\n                    value={item.value}\n                    checked={stoneType[item.id]}\n                    onChange={handleTypeChange}\n                  />\n                  <span className=\"checkmark\"></span>\n                </label>\n              ))}\n            </div>\n            <h2 className=\"stone__nav-head\">Couleur</h2>\n            <div className=\"stone__nav-list\">\n              {checkboxesColor.map(item => (\n                <label className=\"stone__nav-var\" key={item.key}>\n                  {item.id}\n                  <StoneFilterListItem\n                    id={item.id}\n                    name={item.name}\n                    value={item.value}\n                    checked={stoneColor[item.id]}\n                    onChange={handleColorChange}\n                  />\n                  <span className=\"checkmark\"></span>\n                </label>\n              ))}\n            </div>\n        </div>\n    )\n}\n\nexport default StoneFilter"]},"metadata":{},"sourceType":"module"}