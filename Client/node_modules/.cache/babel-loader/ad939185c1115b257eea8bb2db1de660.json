{"ast":null,"code":"import _slicedToArray from\"/Users/jonathandennis/frag-pur/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import Header from'../Header/Header';import NavBar from'../NavBar/NavBar';import About from'../About/About';import StoneFilter from'../StoneFilter/StoneFilter';import Contact from'../Contact/Contact';import stoneService from'../../services/stones';//import axios from 'axios'\nimport'./App.css';import{useLocation}from'react-router-dom';var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),stones=_useState2[0],setStones=_useState2[1];var _useLocation=useLocation(),pathname=_useLocation.pathname,hash=_useLocation.hash;console.log('stones: ',stones);useEffect(function(){stoneService.getAll().then(function(response){console.log('App response: ',response);setStones(response);});},[]);//console.log('render', stones.length, 'stones')\nuseEffect(function(){// if not a hash link scroll to top\nif(hash===''){window.scrollTo(0,0);}// else scroll to id\nelse{setTimeout(function(){var id=hash.replace('#','');var element=document.getElementById(id);if(element){element.scrollIntoView();}},0);}},[hash,pathname]);// do this on route change\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"appContainer\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(About,{}),/*#__PURE__*/_jsx(StoneFilter,{stones:stones}),/*#__PURE__*/_jsx(Contact,{})]});};export default App;","map":{"version":3,"sources":["/Users/jonathandennis/frag-pur/Client/src/components/App/App.js"],"names":["React","useState","useEffect","Header","NavBar","About","StoneFilter","Contact","stoneService","useLocation","App","stones","setStones","pathname","hash","console","log","getAll","then","response","window","scrollTo","setTimeout","id","replace","element","document","getElementById","scrollIntoView"],"mappings":"oPAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA;AAEA,MAAO,WAAP,CAEA,OAASC,WAAT,KAA4B,kBAA5B,CAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACYT,QAAQ,CAAC,EAAD,CADpB,wCACTU,MADS,eACDC,SADC,gCAEWH,WAAW,EAFtB,CAERI,QAFQ,cAERA,QAFQ,CAEEC,IAFF,cAEEA,IAFF,CAGhBC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBL,MAAxB,EAGAT,SAAS,CAAC,UAAM,CACdM,YAAY,CACXS,MADD,GAECC,IAFD,CAEM,SAAAC,QAAQ,CAAI,CAChBJ,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BG,QAA9B,EACAP,SAAS,CAACO,QAAD,CAAT,CACC,CALH,EAMD,CAPQ,CAON,EAPM,CAAT,CAQA;AAEAjB,SAAS,CAAC,UAAM,CACd;AACA,GAAGY,IAAI,GAAG,EAAV,CAAa,CACTM,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACH,CACD;AAHA,IAII,CACAC,UAAU,CACN,UAAM,CACF,GAAMC,CAAAA,EAAE,CAAGT,IAAI,CAACU,OAAL,CAAa,GAAb,CAAkB,EAAlB,CAAX,CACA,GAAMC,CAAAA,OAAO,CAAGC,QAAQ,CAACC,cAAT,CAAwBJ,EAAxB,CAAhB,CACA,GAAIE,OAAJ,CAAa,CACTA,OAAO,CAACG,cAAR,GACH,CACJ,CAPK,CAQN,CARM,CAAV,CAUH,CACJ,CAlBU,CAkBR,CAACd,IAAD,CAAOD,QAAP,CAlBQ,CAAT,CAkBmB;AAEnB,mBACE,aAAK,SAAS,CAAC,cAAf,wBACE,KAAC,MAAD,IADF,cAGE,KAAC,MAAD,IAHF,cAKE,KAAC,KAAD,IALF,cASE,KAAC,WAAD,EAAa,MAAM,CAAEF,MAArB,EATF,cAWE,KAAC,OAAD,IAXF,GADF,CAeD,CAnDD,CAqDA,cAAeD,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Header from '../Header/Header'\nimport NavBar from '../NavBar/NavBar'\nimport About from '../About/About'\nimport StoneFilter from '../StoneFilter/StoneFilter'\nimport Contact from '../Contact/Contact'\nimport stoneService from '../../services/stones'\n//import axios from 'axios'\n\nimport './App.css'\n\nimport { useLocation } from 'react-router-dom'\n\n\nconst App = () => {\n  const [stones, setStones] = useState([])\n  const { pathname, hash } = useLocation()\n  console.log('stones: ', stones)\n\n\n  useEffect(() => {\n    stoneService\n    .getAll()\n    .then(response => {\n      console.log('App response: ', response)\n      setStones(response)\n      })\n  }, [])\n  //console.log('render', stones.length, 'stones')\n\n  useEffect(() => {\n    // if not a hash link scroll to top\n    if(hash===''){\n        window.scrollTo(0, 0)\n    }\n    // else scroll to id\n    else{\n        setTimeout(\n            () => {\n                const id = hash.replace('#', '');\n                const element = document.getElementById(id);\n                if (element) {\n                    element.scrollIntoView();\n                }\n            },\n            0\n        );\n    }\n}, [hash, pathname]) // do this on route change\n\n  return (\n    <div className=\"appContainer\">\n      <Header />\n      {/* <Route exact path=\"/\" component={Header} /> */}\n      <NavBar />\n      {/* <Route exact path=\"/\" component={About} /> */}\n      <About />\n      {/* <Route exact path=\"/\">\n        <StoneFilter stones={stones} />\n      </Route> */}\n      <StoneFilter stones={stones} />\n      {/* <Route exact path=\"/\" component={Contact} /> */}\n      <Contact />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}