{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathandennis/frag-pur/src/components/StoneDisplay/StoneDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport StoneFilter from '../StoneFilter/StoneFilter';\nimport Stone from '../Stone/Stone';\nimport './StoneDisplay.css';\n\nconst StoneDisplay = ({\n  stones\n}) => {\n  _s();\n\n  const [stoneType, setStoneType] = useState({});\n  const [stoneColor, setStoneColor] = useState({});\n  console.log('stones in StoneDisplay: ', stones);\n  console.log('stoneType in Display: ', stoneType);\n  console.log('stoneColor in Display: ', stoneColor);\n  const stonesToShow = stones.filter(item => item.type === stoneType); //console.log('item.type: ', item.type)\n\n  console.log('stoneType.checked: ', stoneType.checked);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"stone\",\n    children: [/*#__PURE__*/_jsxDEV(StoneFilter, {\n      stoneType: stoneType,\n      setStoneType: setStoneType,\n      stoneColor: stoneColor,\n      setStoneColor: setStoneColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stone__carousel\",\n      children: stonesToShow.map(stone => /*#__PURE__*/_jsxDEV(Stone, {\n        stone: stone\n      }, stone.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoneDisplay, \"/Mip6Y7R6vYQtwDHkP/s3josvGA=\");\n\n_c = StoneDisplay;\nexport default StoneDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoneDisplay\");","map":{"version":3,"sources":["/Users/jonathandennis/frag-pur/src/components/StoneDisplay/StoneDisplay.js"],"names":["React","useState","StoneFilter","Stone","StoneDisplay","stones","stoneType","setStoneType","stoneColor","setStoneColor","console","log","stonesToShow","filter","item","type","checked","map","stone","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAO,oBAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACES,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCN,MAAxC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCL,SAAtC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCH,UAAvC;AAEF,QAAMI,YAAY,GAAGP,MAAM,CAACQ,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcT,SAApC,CAArB,CAPmC,CAQnC;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCL,SAAS,CAACU,OAA7C;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,SAAS,EAAEV,SADb;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,aAAa,EAAEC;AAJjB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGG,YAAY,CAACK,GAAb,CAAkBC,KAAD,iBAChB,QAAC,KAAD;AAEA,QAAA,KAAK,EAAEA;AAFP,SACKA,KAAK,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7BD;;GAAMf,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport StoneFilter from '../StoneFilter/StoneFilter'\nimport Stone from '../Stone/Stone'\n\nimport './StoneDisplay.css'\n\nconst StoneDisplay = ({ stones }) => {\n  const [stoneType, setStoneType] = useState({})\n  const [stoneColor, setStoneColor] = useState({})\n    console.log('stones in StoneDisplay: ', stones)\n    console.log('stoneType in Display: ', stoneType)\n    console.log('stoneColor in Display: ', stoneColor)\n\n  const stonesToShow = stones.filter(item => item.type === stoneType)\n  //console.log('item.type: ', item.type)\n  console.log('stoneType.checked: ', stoneType.checked)\n  \n  return (\n    <section className=\"stone\">\n      <StoneFilter\n        stoneType={stoneType}\n        setStoneType={setStoneType}\n        stoneColor={stoneColor}\n        setStoneColor={setStoneColor}\n      />\n      <div className=\"stone__carousel\">\n        {stonesToShow.map((stone) =>\n          <Stone\n          key={stone.id}\n          stone={stone}\n          />\n        )}\n      </div>\n    </section>\n  )\n}\n\nexport default StoneDisplay"]},"metadata":{},"sourceType":"module"}