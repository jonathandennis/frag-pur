{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathandennis/frag-pur/src/components/StoneFilter/StoneFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport StoneFilterListItem from '../StoneFilterListItem/StoneFilterListItem';\nimport checkboxesType from './checkboxesType';\nimport checkboxesColor from './checkboxesColor';\nimport './StoneFilter.css';\n\nconst StoneFilter = stones => {\n  _s();\n\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    const filterValues = [...new Set(['all', ...stones.map(n => n.type)])];\n    setFilters(filterValues.map((n, i) => ({\n      active: false,\n      value: n\n    })));\n  });\n\n  const handleTypeChange = event => {\n    setCheckedType({ ...checkedType,\n      [event.target.value]: event.target.checked\n    });\n  };\n\n  const handleColorChange = event => {\n    setCheckedColor({ ...checkedColor,\n      [event.target.value]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stone__nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"stone__nav-head\",\n      children: \"Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stone__nav-list\",\n      children: checkboxesType.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"stone__nav-var\",\n        children: [item.value, /*#__PURE__*/_jsxDEV(StoneFilterListItem, {\n          value: item.value,\n          checked: checkedType[item.value],\n          onChange: handleTypeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this)]\n      }, item.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"stone__nav-head\",\n      children: \"Couleur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stone__nav-list\",\n      children: checkboxesColor.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"stone__nav-var\",\n        children: [item.value, /*#__PURE__*/_jsxDEV(StoneFilterListItem, {\n          id: item.id,\n          value: item.value,\n          checked: checkedColor[item.value],\n          onChange: handleColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this)]\n      }, item.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StoneFilter, \"CgZgTgcarlSmjPqmnbGOk4vsCds=\");\n\n_c = StoneFilter;\nexport default StoneFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoneFilter\");","map":{"version":3,"sources":["/Users/jonathandennis/frag-pur/src/components/StoneFilter/StoneFilter.js"],"names":["React","useEffect","useState","StoneFilterListItem","checkboxesType","checkboxesColor","StoneFilter","stones","filters","setFilters","filterValues","Set","map","n","type","i","active","value","handleTypeChange","event","setCheckedType","checkedType","target","checked","handleColorChange","setCheckedColor","checkedColor","item","key","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport StoneFilterListItem from '../StoneFilterListItem/StoneFilterListItem'\nimport checkboxesType from './checkboxesType'\nimport checkboxesColor from './checkboxesColor'\n\nimport './StoneFilter.css'\n\nconst StoneFilter = ( stones ) => {\n  const [ filters, setFilters ] = useState([])\n\n  useEffect(() => {\n    const filterValues = [...new Set([ 'all', ...stones.map(n => n.type) ])]\n    setFilters(filterValues.map((n, i) => ({ active: false, value: n, })))\n  })\n\n  const handleTypeChange = event => {\n    setCheckedType({\n      ...checkedType,\n      [event.target.value]: event.target.checked\n    })\n  }\n\n  const handleColorChange = event => {\n    setCheckedColor({\n      ...checkedColor,\n      [event.target.value]: event.target.checked\n    })\n  }\n\n\n    return (\n        <div className=\"stone__nav\">\n            <h2 className=\"stone__nav-head\">Type</h2>\n            <div className=\"stone__nav-list\">\n              {checkboxesType.map(item => (\n                <label className=\"stone__nav-var\" key={item.key}>\n                  {item.value}\n                  <StoneFilterListItem\n                    value={item.value}\n                    checked={checkedType[item.value]}\n                    onChange={handleTypeChange}\n                  />\n                  <span className=\"checkmark\"></span>\n                </label>\n              ))}\n            </div>\n            <h2 className=\"stone__nav-head\">Couleur</h2>\n            <div className=\"stone__nav-list\">\n              {checkboxesColor.map(item => (\n                <label className=\"stone__nav-var\" key={item.key}>\n                  {item.value}\n                  <StoneFilterListItem\n                    id={item.id}\n                    value={item.value}\n                    checked={checkedColor[item.value]}\n                    onChange={handleColorChange}\n                  />\n                  <span className=\"checkmark\"></span>\n                </label>\n              ))}\n            </div>\n        </div>\n    )\n}\n\nexport default StoneFilter"]},"metadata":{},"sourceType":"module"}